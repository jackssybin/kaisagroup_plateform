<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaisagroup.plateform.service.mail.mapper.EmailMapper">
  <resultMap id="BaseResultMap" type="com.kaisagroup.plateform.service.mail.bean.Email">
    <id column="tid" jdbcType="VARCHAR" property="tid" />
    <result column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="from_user" jdbcType="VARCHAR" property="fromUser" />
    <result column="to_user" jdbcType="VARCHAR" property="toUser" />
    <result column="cc_user" jdbcType="VARCHAR" property="ccUser" />
    <result column="bcc_user" jdbcType="VARCHAR" property="bccUser" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="template_id" jdbcType="VARCHAR" property="templateId" />
    <result column="receive_param" jdbcType="VARCHAR" property="receiveParam" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tid, serial_no, from_user, to_user, cc_user, bcc_user, priority, template_id, receive_param, 
    create_date, create_by, update_date, state
  </sql>
  <select id="selectByExample" parameterType="com.kaisagroup.plateform.service.mail.bean.EmailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_msg_email
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_msg_email
    where tid = #{tid,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_msg_email
    where tid = #{tid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.kaisagroup.plateform.service.mail.bean.Email">
    insert into tb_msg_email (tid, serial_no, from_user, 
      to_user, cc_user, bcc_user, 
      priority, template_id, receive_param, 
      create_date, create_by, update_date, 
      state)
    values (#{tid,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR}, #{fromUser,jdbcType=VARCHAR}, 
      #{toUser,jdbcType=VARCHAR}, #{ccUser,jdbcType=VARCHAR}, #{bccUser,jdbcType=VARCHAR}, 
      #{priority,jdbcType=VARCHAR}, #{templateId,jdbcType=VARCHAR}, #{receiveParam,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kaisagroup.plateform.service.mail.bean.Email">
    insert into tb_msg_email
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        tid,
      </if>
      <if test="serialNo != null">
        serial_no,
      </if>
      <if test="fromUser != null">
        from_user,
      </if>
      <if test="toUser != null">
        to_user,
      </if>
      <if test="ccUser != null">
        cc_user,
      </if>
      <if test="bccUser != null">
        bcc_user,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="templateId != null">
        template_id,
      </if>
      <if test="receiveParam != null">
        receive_param,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null">
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="fromUser != null">
        #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null">
        #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="ccUser != null">
        #{ccUser,jdbcType=VARCHAR},
      </if>
      <if test="bccUser != null">
        #{bccUser,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="receiveParam != null">
        #{receiveParam,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaisagroup.plateform.service.mail.bean.Email">
    update tb_msg_email
    <set>
      <if test="serialNo != null">
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="fromUser != null">
        from_user = #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null">
        to_user = #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="ccUser != null">
        cc_user = #{ccUser,jdbcType=VARCHAR},
      </if>
      <if test="bccUser != null">
        bcc_user = #{bccUser,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="receiveParam != null">
        receive_param = #{receiveParam,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where tid = #{tid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaisagroup.plateform.service.mail.bean.Email">
    update tb_msg_email
    set serial_no = #{serialNo,jdbcType=VARCHAR},
      from_user = #{fromUser,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=VARCHAR},
      cc_user = #{ccUser,jdbcType=VARCHAR},
      bcc_user = #{bccUser,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=VARCHAR},
      receive_param = #{receiveParam,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where tid = #{tid,jdbcType=VARCHAR}
  </update>
</mapper>